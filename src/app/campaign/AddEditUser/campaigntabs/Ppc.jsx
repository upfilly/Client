import { useState } from "react";

const formFields = [
  {
    label: "If the Publishers Promote you via PPC, will they entitled for Full Commision?",
    showInput: false,
  },
  {
    label: "If Publisher Directly Link to your Website from search engine ,will they receive full commission?",
    showInput: false,
  },
  {
    label: "If publisher use your Brand name in their Display URL ,will they receive full commission?",
    showInput: false,
  },
  {
    label: "If publisher use your Brand name in their paid search title and Discription ,will they receive full commission?",
    showInput: false,
  },
  {
    label: "If publisher adds your Brand name into their negetive Keyword list ,will they receive full commission?",
    showInput: false,
  },
  { 
    label: "If publisher Display their adds when your brand name or variations of you brand name are entered as search Keywords ,will they receive full commission?(eg. vodafone ,voda fone)", 
    showInput: false 
  },
  { 
    label: "If publisher Display their adds when when misspelling of your brand name are entered as keywords ill they receive full commission ?(eg. vodofone)", 
    showInput: false 
  },
  { 
    label: "If publisher Display their adds when your brand name and another keyword are entered as search keywords ,will they receive full commission ? (e.g vodafone mobile)", 
    showInput: false 
  },
  { 
    label: "Do you have a restricted Group of publishers who can earn commission on sales generated by brand related terms ?", 
    showInput: false 
  },
  { 
    label: "For any agreed publisher paid search activity , will publisher be paid for sales generated from the following search engines ?", 
    showInput: false 
  },
  { label: "Google", showInput: true },
  { label: "yahoo", showInput: true },
  { label: "Bing", showInput: true },
  { label: "Other", showInput: true },
  { 
    label: "Are there any specific search terms(keyword) where sales from publisher PPC adds will not be eligible to earn commision", 
    showInput: true 
  },
  { 
    label: "if publishers place shopping ads on a seacrh engine and link directly to your website ,are they eligble to receive full commission ?", 
    showInput: false 
  },
  { 
    label: "if publishers place shopping ads on a seacrh engine such as Comparison Shopping Service(CSS),does this activity needs to be tracked in a seprate specific publisher account ?", 
    showInput: true 
  },
];

export default function Ppc() {
  const [formData, setFormData] = useState(
    formFields.reduce((acc, field) => {
      acc[field.label] = { value: "Yes", additionalInfo: "" };
      return acc;
    }, {})
  );

  const handleValueChange = (label, value) => {
    setFormData((prev) => ({
      ...prev,
      [label]: { ...prev[label], value },
    }));
  };

  const handleInfoChange = (label, value) => {
    setFormData((prev) => ({
      ...prev,
      [label]: { ...prev[label], additionalInfo: value },
    }));
  };

  const handleSubmit = () => {
    console.log("Form Data:", formData);
    // Add save logic here
  };

  return (
    // <div className="container-fluid">
      <div className="row">
        <div className="col-12">
          {formFields.map(({ label, showInput }) => (
            <div key={label} className="mb-3">
              <div className="card shadow-sm">
                <div className="card-body">
                  <div className="row align-items-center">
                    {/* Field Label */}
                    <div className="col-lg-6 col-md-12 mb-2 mb-lg-0">
                      <p className="mb-0 fw-medium small">{label}</p>
                    </div>

                    {/* Yes/No Radio Buttons */}
                    <div className="col-lg-3 col-md-6 mb-2 mb-lg-0">
                      <div className="d-flex gap-3">
                        <div className="form-check">
                          <input
                            className="form-check-input"
                            type="radio"
                            name={`${label}-option`}
                            id={`${label}-yes`}
                            value="Yes"
                            checked={formData[label].value === "Yes"}
                            onChange={() => handleValueChange(label, "Yes")}
                          />
                          <label className="form-check-label small" htmlFor={`${label}-yes`}>
                            Yes
                          </label>
                        </div>
                        <div className="form-check">
                          <input
                            className="form-check-input"
                            type="radio"
                            name={`${label}-option`}
                            id={`${label}-no`}
                            value="No"
                            checked={formData[label].value === "No"}
                            onChange={() => handleValueChange(label, "No")}
                          />
                          <label className="form-check-label small" htmlFor={`${label}-no`}>
                            No
                          </label>
                        </div>
                      </div>
                    </div>

                    {/* Conditional Input */}
                    {showInput && (
                      <div className="col-lg-3 col-md-6">
                        <input
                          type="text"
                          className="form-control form-control-sm"
                          placeholder="Click to edit"
                          value={formData[label].additionalInfo}
                          onChange={(e) => handleInfoChange(label, e.target.value)}
                        />
                      </div>
                    )}
                  </div>
                </div>
              </div>
            </div>
          ))}

          <div className="mt-4">
            <button
              type="button"
              onClick={handleSubmit}
              className="btn btn-primary w-100 py-2"
            >
              Save
            </button>
          </div>
        </div>
      </div>
    // </div>
  );
}